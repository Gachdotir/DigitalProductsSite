from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status

from .serializers import CategorySerializer, ProductSerializer, FileSerializer
from .models import Category, Product, File


class CategoryListView(APIView):
    def get(self, request):
        categories = Category.objects.all()
        serializer = CategorySerializer(categories, many=True, context={'request': request})
        return Response(serializer.data, status=status.HTTP_200_OK)


class CategoryDetailView(APIView):
    def get(self, request, pk):
        try:
            categories = Category.objects.get(pk=pk)
        except categories.DoesNotExist:
            return Response(status=status.HTTP_404_NOT_FOUND)

        serializer = CategorySerializer(categories, context={'request': request})
        return Response(serializer.data, status=status.HTTP_200_OK)


class ProductListView(APIView):
    def get(self, request):
        products = Product.objects.all()
        serializer = ProductSerializer(products, many=True, context={'request': request})
        return Response(serializer.data, status=status.HTTP_200_OK)


class ProductDetailView(APIView):
    def get(self, request, pk):
        try:
            product = Product.objects.get(pk=pk)
        except Product.DoesNotExist:
            return Response(status=status.HTTP_404_NOT_FOUND)

        serializer = ProductSerializer(product, context={'request': request})
        return Response(serializer.data, status=status.HTTP_200_OK)


class FileListView(APIView):
    def get(self, request, product_pk):
        files = File.objects.filter(product_id= product_pk)
        serializer = FileSerializer(files, many=True, context={'request': request})
        return Response(serializer.data)



class FileDetailView(APIView):
    def get(self, request, pk, product_pk):
        try:
            file = File.objects.filter(pk= pk, product_id= product_pk)
        except file.DoesNotExist:
            return Response(status=status.HTTP_404_NOT_FOUND)
        serializer = FileSerializer(file, many=True, context={'request': request})
        return Response(serializer.data)
